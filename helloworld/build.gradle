buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'com.commercehub.gradle.plugin:gradle-avro-plugin:0.16.0'
    }
}
plugins {
    id 'scala-common-conventions'
    id 'avro-generation-conventions'
    id 'test-common-conventions'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}
repositories {
    mavenLocal()
    mavenCentral()
    gradlePluginPortal()
}

apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

apply from: 'gradle/spark.gradle'

// The main class for the application plugin and is currently unused. Setting a dummy one.
application {
    mainClass.set("please.set.main.class.in.build.gradle")
}

ext {
    sparkVersion = '3.1.3'
    transmogrifaiVersion ='0.8.0-SNAPSHOT'
}

//noinspection GroovyAssignabilityCheck
dependencies {
    // Spark
    compileOnly "org.apache.spark:spark-core_2.12:$sparkVersion"
    testImplementation "org.apache.spark:spark-core_2.12:$sparkVersion"
    compileOnly "org.apache.spark:spark-mllib_2.12:$sparkVersion"
    testImplementation "org.apache.spark:spark-mllib_2.12:$sparkVersion"
    compileOnly "org.apache.spark:spark-sql_2.12:$sparkVersion"
    testImplementation "org.apache.spark:spark-sql_2.12:$sparkVersion"

    // TransmogrifAI
    implementation "com.salesforce.transmogrifai:transmogrifai-core_2.12:$transmogrifaiVersion"

    // Pretrained models used in TransmogrifAI, e.g. OpenNLP POS/NER models etc. (optional)
    // compile "com.salesforce.transmogrifai:transmogrifai-models_2.12:$transmogrifaiVersion"
}

jar {
    manifest.attributes "Main-Class": "$mainClassName"
    archiveBaseName = "${rootProject.name}"
}

shadowJar {
    zip64 = true
    exclude 'META-INF/**'
    archiveBaseName = jar.baseName
    // The main class for the application plugin and is currently unused. Setting a dummy one.
    mainClassName = "please.set.main.class.in.build.gradle"

    // Concatenate modularized mleap metadata
    // https://github.com/combust/mleap/issues/656
    append 'reference.conf'
}

wrapper {
    gradleVersion = '8.7'
    distributionType = Wrapper.DistributionType.BIN
    distributionSha256Sum = '544c35d6bd849ae8a5ed0bcea39ba677dc40f49df7d1835561582da2009b961d'
}

task runMain(type: JavaExec) {
    description 'run a main class, i.e.: runMain -Dmain=MyMainClass -Dargs="arg1 arg2 arg3"'
    main = System.getProperty("main")
    classpath = sourceSets.main.runtimeClasspath
    //noinspection GroovyAssignabilityCheck
    systemProperties = System.getProperties()
    args = System.getProperty("args", "") == "" ? new LinkedList<String>() : Arrays.asList(System.getProperty("args").split(" "))
}

task repl(type: JavaExec) {
    description 'Start Scala repl.'
    main = "scala.tools.nsc.MainGenericRunner"
    classpath = sourceSets.main.runtimeClasspath + configurations.scalaCompiler
    standardInput System.in
    args '-usejavacp'
}

task classpath {
    doLast {
        description 'Print project classpath.'
        println sourceSets.main.runtimeClasspath.asPath
    }
}
